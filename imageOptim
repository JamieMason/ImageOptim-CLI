#!/bin/sh

# Copyright © 2013 Jamie Mason, @GotNoSugarBaby,
# https://github.com/JamieMason

# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:

# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# ($1:message) -> stdout
# Output a message in red with a cross icon by it
function errorLog {
  printf "\e[31m✘ $1"
  echo "\033[0m"
}

# Check if ImageOptim is installed
APPLESCRIPT=`cat <<EOF
try
  tell application "Finder"
    return name of application file id "net.pornel.ImageOptim"
  end tell
on error err_msg number err_num
  return null
end try
EOF`

if [ null == `osascript -e "$APPLESCRIPT"` ]; then
  errorLog "ImageOptim is not installed (http://imageoptim.com)"
  exit 1
fi

# path to image directory we should optimise
imgPath=$1

# if path is not set
if [ -z "$imgPath" ]; then
  errorLog "usage:\n  imageOptim ./path/to/directory"
  exit 1
fi

# if that path resolves correctly to a directory
if [ -d "$imgPath" ]; then
  # find all images within it
  for imgName in "$(find -E "$imgPath" -regex '.*(bmp|gif|jpeg|jpg|pcx|png|pnm|tga|tiff)')"; do
    # and pass them to the app
    open -a ImageOptim.app "$imgName"
  done
else
  errorLog "Could not find $imgPath"
  exit 1
fi
